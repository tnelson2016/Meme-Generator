{"version":3,"sources":["components/Header.js","components/MemeGenerator.js","App.js","index.js"],"names":["Header","react_default","a","createElement","src","alt","MemeGenerator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","assertThisInitialized","handleSubmit","_this2","fetch","then","response","json","memes","data","setState","event","_event$target","target","name","value","defineProperty","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","className","onSubmit","type","placeholder","onChange","Component","App","components_Header","components_MemeGenerator","ReactDOM","render","src_App","document","getElementById"],"mappings":"6LAwBeA,MApBf,WACE,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OACGC,IAAI,iEACJC,IAAI,aAEDJ,EAAAC,EAAAC,cAAA,sFCyEGG,cA/Eb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAM,CACTC,QAAS,GACTC,WAAY,GACZC,UAAW,gCACXC,YAAa,IAGfX,EAAKY,aAAaZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IAClBA,EAAKe,aAAaf,EAAKe,aAAaF,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IAVPA,mFAcI,IAAAgB,EAAAb,KACjBc,MAAM,qCACJC,KAAK,SAAAC,GAAQ,OAAEA,EAASC,SACxBF,KAAK,SAAAC,GAAY,IACTE,EAASF,EAASG,KAAlBD,MACPL,EAAKO,SAAS,CAACZ,YAAYU,2CAKnBG,GAAM,IAAAC,EACED,EAAME,OAAnBC,EADWF,EACXE,KAAMC,EADKH,EACLG,MACZzB,KAAKoB,SAALtB,OAAA4B,EAAA,EAAA5B,CAAA,GAAgB0B,EAAMC,yCAGXJ,GACXA,EAAMM,iBACN,IAAMC,EAAQC,KAAKC,MAAMD,KAAKE,SAAW/B,KAAKI,MAAMI,YAAYwB,QAC1DC,EAAYjC,KAAKI,MAAMI,YAAYoB,GAASM,IAClDlC,KAAKoB,SAAS,CAACb,UAAU0B,qCAMzB,OACE1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,YAAYC,SAAUpC,KAAKY,cACvCrB,EAAAC,EAAAC,cAAA,SACE4C,KAAM,OACNb,KAAK,UACLC,MAAOzB,KAAKI,MAAMC,QAClBiC,YAAY,WACZC,SAAUvC,KAAKS,eAGjBlB,EAAAC,EAAAC,cAAA,SACE4C,KAAM,OACNb,KAAK,aACLC,MAAOzB,KAAKI,MAAME,WAClBgC,YAAY,cACZC,SAAUvC,KAAKS,eAGnBlB,EAAAC,EAAAC,cAAA,sBAEDF,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,QACZ5C,EAAAC,EAAAC,cAAA,OAAKC,IAAKM,KAAKI,MAAMG,UAAWZ,IAAK,KACpCJ,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,OAAOnC,KAAKI,MAAMC,SAChCd,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,UAAUnC,KAAKI,MAAME,qBAhElBkC,mBCqBbC,MAlBf,WACE,OACElD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAACkD,EAAD,QCHNC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.96639abe.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nfunction Header(){\r\n  return(\r\n    <header>\r\n      <img\r\n         src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"\r\n         alt=\"Problem?\"\r\n            />\r\n            <p>Meme Generator Section</p>\r\n\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Header\r\n","import React, {Component} from 'react'\r\n\r\n\r\n\r\nclass MemeGenerator extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      topText: '',\r\n      bottomText: '',\r\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n      allMemeImgs: []\r\n\r\n    }\r\n    this.handleChange=this.handleChange.bind(this)\r\n    this.handleSubmit=this.handleSubmit.bind(this)\r\n  }\r\n\r\n\r\ncomponentDidMount(){\r\n  fetch(\"https://api.imgflip.com/get_memes\")\r\n   .then(response=>response.json())\r\n   .then(response => {\r\n     const {memes} = response.data\r\n     this.setState({allMemeImgs:memes})\r\n   })\r\n\r\n}\r\n\r\nhandleChange(event){\r\n  const{name, value}=event.target\r\n  this.setState({[name]:value})\r\n}\r\n\r\nhandleSubmit(event){\r\n  event.preventDefault()\r\n  const randNum=Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n  const randMemeImg=this.state.allMemeImgs[randNum].url\r\n  this.setState({randomImg:randMemeImg})\r\n}\r\n\r\n\r\n\r\nrender(){\r\n  return(\r\n    <div>\r\n      <form className='meme-form' onSubmit={this.handleSubmit}>\r\n          <input\r\n            type= 'text'\r\n            name='topText'\r\n            value={this.state.topText}\r\n            placeholder='Top Text'\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <input\r\n            type= 'text'\r\n            name='bottomText'\r\n            value={this.state.bottomText}\r\n            placeholder='Bottom Text'\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n        <button>GEN</button>\r\n      </form>\r\n       <div className='meme'>\r\n          <img src={this.state.randomImg} alt =''/>\r\n           <h2 className='top'>{this.state.topText}</h2>\r\n           <h2 className='bottom'>{this.state.bottomText}</h2>\r\n\r\n       </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default MemeGenerator\r\n","import React from 'react'\r\nimport Header from './components/Header'\r\nimport MemeGenerator from './components/MemeGenerator'\r\nimport './App.css'\r\n\r\n\r\n\r\nfunction App(){\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <MemeGenerator />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}